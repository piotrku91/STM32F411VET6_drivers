
cmake_minimum_required (VERSION 3.6)

set(PROJ "stm32f411xx")
project(${PROJ})
enable_language(ASM)

set(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/Toolchain-arm-gcc.cmake)


# All relative to project root, as generated by STM32CubeMX.
set(SOURCE_DIR ${CMAKE_SOURCE_DIR}/Src)
set(STARTUP_DIR ${CMAKE_SOURCE_DIR}/Startup)


# Look here for header files.
include_directories(${CMAKE_SOURCE_DIR}/Inc)
include_directories(${CMAKE_SOURCE_DIR}/drivers/Inc)


# Get all sources
#AUX_SOURCE_DIRECTORY(${HAL_DIR}/Src HAL_SOURCES)

add_executable(${PROJ} 
    ${SOURCE_DIR}/main.c
    ${SOURCE_DIR}/syscalls.c
    ${CMAKE_SOURCE_DIR}/drivers/Src/stm32f411xx_gpio_driver.c

    ${STARTUP_DIR}/startup_stm32f411vetx.s
)

set_target_properties(${PROJ} PROPERTIES SUFFIX ".elf")

target_compile_definitions(${PROJ} PUBLIC
    "__weak=__attribute__((weak))"
    "__packed=__attribute__((__packed__))"
    STM32F411VETx
)

target_compile_options(${PROJ} PUBLIC
 -fdata-sections -Wall -fstack-usage  -mthumb
)

set(LINKER_SCRIPT ${CMAKE_CURRENT_LIST_DIR}/STM32F411VETX_FLASH.ld)
set(LINKER_OPTION "-T")

target_link_options(${PROJ} PUBLIC
    ${LINKER_OPTION} ${LINKER_SCRIPT}
    -specs=nano.specs
    -Wl,--gc-section
    -mcpu=cortex-m4
    -mthumb
    
)

# Generate assembly listing.
add_custom_command(
    TARGET ${PROJ}
    COMMAND "arm-none-eabi-objdump"
    ARGS "-S" "$<TARGET_FILE:${PROJ}>" ">>" "${PROJ}.lst"
)

if(CMAKE_HOST_WIN32)
    find_program(stm32programmer NAMES STM32_Programmer_CLI PATHS "C:/Program Files/STMicroelectronics/STM32Cube/STM32CubeProgrammer/bin/")
elseif (CMAKE_HOST_APPLE)
    find_program(stm32programmer NAMES STM32_Programmer.sh STM32_Programmer_CLI PATHS "/Applications/STMicroelectronics/STM32Cube/STM32CubeProgrammer/STM32CubeProgrammer.app/Contents/MacOs/bin")
else()
    find_program(stm32programmer NAMES STM32_Programmer.sh STM32_Programmer_CLI PATHS "/opt/STMicroelectronics/STM32Cube/STM32CubeProgrammer/")
endif()

# Flash firmware to target.
add_custom_target(flash
    ${stm32programmer} -c port=SWD -w "$<TARGET_FILE:${PROJ}>" -g
    DEPENDS ${PROJ})



